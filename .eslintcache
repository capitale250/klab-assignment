[{"/Users/andela/Desktop/klab assignment/src/index.js":"1","/Users/andela/Desktop/klab assignment/src/components/App.js":"2","/Users/andela/Desktop/klab assignment/src/components/EditContact.js":"3","/Users/andela/Desktop/klab assignment/src/components/Header.js":"4","/Users/andela/Desktop/klab assignment/src/components/addtasks.js":"5","/Users/andela/Desktop/klab assignment/src/components/login.js":"6","/Users/andela/Desktop/klab assignment/src/components/ContactList.js":"7","/Users/andela/Desktop/klab assignment/src/components/ContactDetail.js":"8","/Users/andela/Desktop/klab assignment/src/components/singup.js":"9","/Users/andela/Desktop/klab assignment/src/components/AddContact.js":"10","/Users/andela/Desktop/klab assignment/src/api/contacts.js":"11","/Users/andela/Desktop/klab assignment/src/components/ContactCard.js":"12"},{"size":208,"mtime":1657276321173,"results":"13","hashOfConfig":"14"},{"size":4482,"mtime":1657276321168,"results":"15","hashOfConfig":"14"},{"size":1851,"mtime":1657276321171,"results":"16","hashOfConfig":"14"},{"size":251,"mtime":1657276321172,"results":"17","hashOfConfig":"14"},{"size":1973,"mtime":1657276321172,"results":"18","hashOfConfig":"14"},{"size":1236,"mtime":1657276321172,"results":"19","hashOfConfig":"14"},{"size":2072,"mtime":1657276321170,"results":"20","hashOfConfig":"14"},{"size":1318,"mtime":1657276321170,"results":"21","hashOfConfig":"14"},{"size":1335,"mtime":1657276321172,"results":"22","hashOfConfig":"14"},{"size":1688,"mtime":1657276321168,"results":"23","hashOfConfig":"14"},{"size":99,"mtime":1657444318798,"results":"24","hashOfConfig":"14"},{"size":1464,"mtime":1657276321169,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"1w3jm9g",{"filePath":"29","messages":"30","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31","usedDeprecatedRules":"28"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":1,"source":"38","usedDeprecatedRules":"28"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"28"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"28"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/andela/Desktop/klab assignment/src/index.js",[],["55","56"],"/Users/andela/Desktop/klab assignment/src/components/App.js",["57","58","59","60","61"],"import React, { useState, useEffect } from \"react\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport { uuid } from \"uuidv4\";\nimport api from \"../api/contacts\";\nimport \"./App.css\";\nimport Header from \"./Header\";\nimport AddContact from \"./AddContact\";\nimport ContactList from \"./ContactList\";\nimport ContactDetail from \"./ContactDetail\";\nimport EditContact from \"./EditContact\";\nimport Addtsk from \"./addtasks\";\nimport Login from \"./login\"\nimport Signup from \"./singup\"\nimport jsPDF from \"jspdf\";\nimport \"jspdf-autotable\";\n\nfunction App() {\n\n  const [contacts, setContacts] = useState([]);\n\n  //RetrieveContacts\n  const retrieveContacts = async () => {\n    const response = await api.get(\"/contacts\");\n    return response.data;\n  };\n\n  const addContactHandler = async (contact) => {\n    console.log(contact);\n    const request = {\n      id: uuid(),\n      task:[],\n      ...contact,\n    };\n\n    const response = await api.post(\"/contacts\", request);\n    console.log(response);\n    setContacts([...contacts, response.data]);\n  };\n\n  const updateContactHandler = async (contact) => {\n    const response = await api.put(`/contacts/${contact.id}`, contact);\n    const { id, name, email } = response.data;\n    setContacts(\n      contacts.map((contact) => {\n        return contact.id === id ? { ...response.data } : contact;\n      })\n    );\n  };\n  const addtaskhandle = async (contact) => {\n    const response = await api.put(`/contacts/${contact.id}`, contact);\n    const { id, name, email } = response.data;\n    setContacts(\n      contacts.map((contact) => {\n        return contact.id === id ? { ...response.data } : contact;\n      })\n    );\n  };\n\n  const removeContactHandler = async (id) => {\n    await api.delete(`/contacts/${id}`);\n    const newContactList = contacts.filter((contact) => {\n      return contact.id !== id;\n    });\n\n    setContacts(newContactList);\n  };\n  const exportPDF = () => {\n    const unit = \"pt\";\n    const size = \"A4\"; // Use A1, A2, A3 or A4\n    const orientation = \"portrait\"; // portrait or landscape\n\n    const marginLeft = 40;\n    const doc = new jsPDF(orientation, unit, size);\n\n    doc.setFontSize(15);\n\n    const title = \"My Awesome Report\";\n    const headers = [[\"NAME\", \"EMAIL\",\"ROLE\"]];\n\n    const data = contacts.map(elt=> [elt.name, elt.email,elt.position]);\n\n    let content = {\n      startY: 50,\n      head: headers,\n      body: data\n    };\n\n    doc.text(title, marginLeft, 40);\n    doc.autoTable(content);\n    doc.save(\"report.pdf\")\n  }\n\n  useEffect(() => {\n    // const retriveContacts = JSON.parse(localStorage.getItem(LOCAL_STORAGE_KEY));\n    // if (retriveContacts) setContacts(retriveContacts);\n    const getAllCOntacts = async () => {\n      const allContacts = await retrieveContacts();\n      if (allContacts) setContacts(allContacts);\n    };\n\n    getAllCOntacts();\n  }, []);\n\n  useEffect(() => {\n    //localStorage.setItem(LOCAL_STORAGE_KEY, JSON.stringify(contacts));\n  }, [contacts]);\n\n  return (\n    <div className=\"ui container\">\n      <Router>\n        <Header />\n        <Switch>\n          <Route\n            path=\"/\"\n            exact\n            render={(props) => (\n              <ContactList\n                {...props}\n                contacts={contacts}\n                getContactId={removeContactHandler}\n              />\n            )}\n          />\n           <Route\n            path=\"/allemployee\"\n            exact\n            render={(props) => (\n              <ContactDetail\n                // {...props}\n                contacts={contacts}\n               \n              />\n            )}\n          />\n          <Route\n            path=\"/add\"\n            render={(props) => (\n              <AddContact {...props} addContactHandler={addContactHandler} />\n            )}\n          />\n\n          <Route\n            path=\"/edit\"\n            render={(props) => (\n              <EditContact\n                {...props}\n                updateContactHandler={updateContactHandler}\n              />\n            )}\n          />\n           <Route\n            path=\"/addtask\"\n            render={(props) => (\n              <Addtsk\n                {...props}\n                updateContactHandler={addtaskhandle}\n              />\n            )}\n          />\n\n          <Route path=\"/contact/:id\" component={ContactDetail} />\n          <Route path=\"/login\" component={Login} />\n          <Route path=\"/signup\" component={Signup} />\n        </Switch>\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","/Users/andela/Desktop/klab assignment/src/components/EditContact.js",[],"/Users/andela/Desktop/klab assignment/src/components/Header.js",[],"/Users/andela/Desktop/klab assignment/src/components/addtasks.js",["62","63","64","65","66","67","68","69","70"],"import * as React from \"react\";\nimport api from \"../api/contacts\";\n\nconst Addtsk  = (props) => {\n  const { id, name, email,position,tasks } = props.location.state.contact;\n\n  React.useEffect(async()=>{\n    console.log(props)\n    const response = await api.get(`/contacts/${ props.location.state.contact.id}`);\n    console.log(response.data.task)\n    setData(response.data.task)\n  },[])\n  \n  const [prod, setprod] = React.useState({task:\"\"});\n  const [data, setData] = React.useState(\"\");\n  const [input, setInput] = React.useState([]);\n\n  // const onInputChange = (e) => {\n  //   const { name, value } = e.target;\n  //   console.log(value)\n  //   setprod({ ...prod, [name]: value });\n    \n  // };\n  // console.log(prod.task)\n\n const addtsk = (e) => {\n    e.preventDefault();\n    if (prod === \"\") {\n      alert(\"ALl the fields are mandatory!\");\n      return;\n    }\n    const list={\n      todo:input,\n      isDone:false,\n    }\n    console.log(data)\n    const updatetodo=[...data,list]\n    const send = {\n     task:updatetodo,\n     id:props.location.state.contact.id,\n     name:props.location.state.contact. name,\n     email:props.location.state.contact.email,\n     position:props.location.state.contact.position,\n    };\n     console.log(send)\n    props.updateContactHandler(send);\n    // this.setState({ task: \"\"});\n    props.history.push(\"/\");\n  };\n  // render() {\n    return (\n      <div className=\"ui main\">\n        <h2>add task</h2>\n        <form className=\"ui form\" onSubmit={addtsk}>\n          <div className=\"field\">\n            <label>Name</label>\n            <input\n              type=\"text\"\n              name=\"task\"\n              placeholder=\"task Name\"\n    \n              value={input}\n              onChange={(e)=>setInput(e.target.value)}\n              // onChange={(e) => onInputChange(e)}\n            />\n          </div>\n         \n          <button className=\"ui button blue\">task</button>\n        </form>\n      </div>\n    );\n  }\n// }\n\nexport default Addtsk;\n","/Users/andela/Desktop/klab assignment/src/components/login.js",[],"/Users/andela/Desktop/klab assignment/src/components/ContactList.js",["71"],"import React, { useState, useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport ContactCard from \"./ContactCard\";\nimport jsPDF from \"jspdf\";\nimport \"jspdf-autotable\";\nimport { CSVLink } from \"react-csv\";\n\nconst ContactList = (props) => {\n  console.log(props);\n  const [fileHeaders] = useState([\n    {label: 'Email', key: 'email'},\n    {label: ' Name', key: 'name'},\n    {label: 'Position', key: 'position'},\n  \n  ])\n  ;\n\n  const deleteConactHandler = (id) => {\n    props.getContactId(id);\n  };\n\n  const renderContactList = props.contacts.map((contact) => {\n    return (\n      <ContactCard\n        contact={contact}\n        clickHander={deleteConactHandler}\n        key={contact.id}\n      />\n    );\n  });\n  const exportPDF = () => {\n    const unit = \"pt\";\n    const size = \"A4\"; // Use A1, A2, A3 or A4\n    const orientation = \"portrait\"; // portrait or landscape\n\n    const marginLeft = 40;\n    const doc = new jsPDF(orientation, unit, size);\n\n    doc.setFontSize(15);\n\n    const title = \"My Awesome Report\";\n    const headers = [[\"NAME\", \"EMAIL\",\"POSITIONS\"]];\n\n    const data = props.contacts.map(elt=> [elt.name, elt.email,elt.position]);\n\n    let content = {\n      startY: 50,\n      head: headers,\n      body: data\n    };\n\n    doc.text(title, marginLeft, 40);\n    doc.autoTable(content);\n    doc.save(\"report.pdf\")\n  }\n\n\n  return (\n    <div className=\"main\">\n      <h2>\n        employee List\n        <Link to=\"/add\">\n          <button className=\"ui button blue right\">Add employee</button>\n        </Link>\n      </h2>\n      <div className=\"ui celled list\">{renderContactList}</div>\n      <div>\n        <button onClick={() => exportPDF()}>Generate Report</button>\n      </div>\n      <div>\n      <button >\n          {props.contacts?.length &&\n            <CSVLink\n              headers={fileHeaders}\n              data={props.contacts}\n              filename=\"results.csv\"\n              target=\"_blank\"\n            >\n              Export\n            </CSVLink>\n          }\n          </button>\n  </div>\n    </div>\n  );\n};\n\nexport default ContactList;\n","/Users/andela/Desktop/klab assignment/src/components/ContactDetail.js",["72","73","74","75"],"import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport user from \"../images/user.jpg\";\n\nconst ContactDetail = (props) => {\n  const { name, email,position,task } = props.contacts;\n  console.log(props)\n  return (\n    <div className=\"main\">\n      <div className=\"fledis\">\n      \n      {/* {task ? task.map((item,index)=>(<li>{item.todo}</li>)):null} */}\n      {props.contacts ? props.contacts.map((item)=>(\n        <>\n        <div className=\"ui card centered\">\n            <div className=\"image\">\n             <img src={user} alt=\"user\" />\n           </div>\n           <div className=\"content\">\n             <div className=\"header\">{item.name}</div>\n             <div className=\"description\">{item.email}</div>\n           </div>\n           <div>\n          <label style={{textDecoration:\"overline underline\", backgroundColor: \"black\",\n          color: \"white\"}}>tasks</label>\n          {item.task ? item.task.map((items,index)=>(<li>{items.todo}</li>)):null}</div>\n          </div>\n        </>\n       \n      )):null}\n          {/* </> */}\n      </div>\n      \n      <div className=\"center-div\">\n        <Link to=\"/\">\n          <button className=\"ui button blue center\">\n            Back to employee List\n          </button>\n        </Link>\n      </div>\n    </div>\n  );\n};\n\nexport default ContactDetail;\n","/Users/andela/Desktop/klab assignment/src/components/singup.js",[],"/Users/andela/Desktop/klab assignment/src/components/AddContact.js",[],"/Users/andela/Desktop/klab assignment/src/api/contacts.js",[],"/Users/andela/Desktop/klab assignment/src/components/ContactCard.js",[],{"ruleId":"76","replacedBy":"77"},{"ruleId":"78","replacedBy":"79"},{"ruleId":"80","severity":1,"message":"81","line":42,"column":17,"nodeType":"82","messageId":"83","endLine":42,"endColumn":21},{"ruleId":"80","severity":1,"message":"84","line":42,"column":23,"nodeType":"82","messageId":"83","endLine":42,"endColumn":28},{"ruleId":"80","severity":1,"message":"81","line":51,"column":17,"nodeType":"82","messageId":"83","endLine":51,"endColumn":21},{"ruleId":"80","severity":1,"message":"84","line":51,"column":23,"nodeType":"82","messageId":"83","endLine":51,"endColumn":28},{"ruleId":"80","severity":1,"message":"85","line":67,"column":9,"nodeType":"82","messageId":"83","endLine":67,"endColumn":18},{"ruleId":"80","severity":1,"message":"86","line":5,"column":11,"nodeType":"82","messageId":"83","endLine":5,"endColumn":13},{"ruleId":"80","severity":1,"message":"81","line":5,"column":15,"nodeType":"82","messageId":"83","endLine":5,"endColumn":19},{"ruleId":"80","severity":1,"message":"84","line":5,"column":21,"nodeType":"82","messageId":"83","endLine":5,"endColumn":26},{"ruleId":"80","severity":1,"message":"87","line":5,"column":27,"nodeType":"82","messageId":"83","endLine":5,"endColumn":35},{"ruleId":"80","severity":1,"message":"88","line":5,"column":36,"nodeType":"82","messageId":"83","endLine":5,"endColumn":41},{"ruleId":"89","severity":1,"message":"90","line":7,"column":19,"nodeType":"91","endLine":12,"endColumn":4},{"ruleId":"89","severity":1,"message":"92","line":12,"column":5,"nodeType":"93","endLine":12,"endColumn":7,"suggestions":"94"},{"ruleId":"80","severity":1,"message":"95","line":14,"column":16,"nodeType":"82","messageId":"83","endLine":14,"endColumn":23},{"ruleId":"96","severity":1,"message":"97","line":41,"column":11,"nodeType":"98","messageId":"99","endLine":41,"endColumn":45,"fix":"100"},{"ruleId":"80","severity":1,"message":"101","line":1,"column":27,"nodeType":"82","messageId":"83","endLine":1,"endColumn":36},{"ruleId":"80","severity":1,"message":"81","line":6,"column":11,"nodeType":"82","messageId":"83","endLine":6,"endColumn":15},{"ruleId":"80","severity":1,"message":"84","line":6,"column":17,"nodeType":"82","messageId":"83","endLine":6,"endColumn":22},{"ruleId":"80","severity":1,"message":"87","line":6,"column":23,"nodeType":"82","messageId":"83","endLine":6,"endColumn":31},{"ruleId":"80","severity":1,"message":"102","line":6,"column":32,"nodeType":"82","messageId":"83","endLine":6,"endColumn":36},"no-native-reassign",["103"],"no-negated-in-lhs",["104"],"no-unused-vars","'name' is assigned a value but never used.","Identifier","unusedVar","'email' is assigned a value but never used.","'exportPDF' is assigned a value but never used.","'id' is assigned a value but never used.","'position' is assigned a value but never used.","'tasks' is assigned a value but never used.","react-hooks/exhaustive-deps","Effect callbacks are synchronous to prevent race conditions. Put the async function inside:\n\nuseEffect(() => {\n  async function fetchData() {\n    // You can await here\n    const response = await MyAPI.getData(someId);\n    // ...\n  }\n  fetchData();\n}, [someId]); // Or [] if effect doesn't need props or state\n\nLearn more about data fetching with Hooks: https://reactjs.org/link/hooks-data-fetching","ArrowFunctionExpression","React Hook React.useEffect has a missing dependency: 'props'. Either include it or remove the dependency array.","ArrayExpression",["105"],"'setprod' is assigned a value but never used.","no-whitespace-before-property","Unexpected whitespace before property name.","MemberExpression","unexpectedWhitespace",{"range":"106","text":"107"},"'useEffect' is defined but never used.","'task' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"108","fix":"109"},[1103,1105],".","Update the dependencies array to be: [props]",{"range":"110","text":"111"},[382,384],"[props]"]